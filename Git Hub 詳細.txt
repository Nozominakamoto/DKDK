GIT HUB アカウント登録ページ
https://github.com/

Source Tree ダウンロード
https://ja.atlassian.com/software/sourcetree


用語
    Git 
    ギット: バージョン管理システム
        - 変更ごとのバックアップがとれる！
        - 各メンバーの修正を合体できる！合・体！

    Repository
    リポジトリ: 全てのファイルの保管場所と考えてもらえれば大丈夫です
        - リポジトリは２種類存在します

    Local Repository 
    ローカルリポジトリ: 手元のパソコン内のリポジトリ、ローカルの保管場所

    Remote Repository
    リモートリポジトリ: 言うならば研修で使うシェアフォルダ、Git Hub上の保管場所

    Commit
    コミット: 今、その瞬間のプロジェクトの状態のスナップショットを撮る感じ
        - 現段階でそのプロジェクトを変更した点全てを保存すること
        - 基本的にはきりのいいとこで行う（デカイプロジェクトとかになると結構頻繁）
        - 行っている作業を段階的に見るのが大切！　<---ここ超重要
    
    Fork
    フォーク: それぞれのアカウント上に俺が作成したリモートリポジトリをコピーする
        -  これは全てリモートでの話

    Clone
    クローン: フォークしたリモートリポジトリをローカルリポジトリにダウンロード！
        - リモートからローカルへダウンロード！これでそれぞれのPCで作業できる！
    
    Branch
    ブランチ: 並行世界
        - MASTER Branch ってのが最初から存在するがそれはつまり完成品がいる世界
        - そこから新しくブランチを作成してそれぞれの機能を実装するため開発していきます
        - 英語でブランチは「枝」のことです、なのでイメージとしては枝分かれしていく感じです
    
    Merge
    マージ: 新しいブランチを作って元のマスターブランチと合流させること

    Push
    プッシュ: ローカルでいくらコミットしても最後にリモートリポジトリの方に反映させないと意味がないので、最後にローカルからリモートへと押し上げます（プッシュ）
        - ざっくり言えばアップロードすること
    
    Pull
    プル: 例えば誰かが他の機能を実装してリモートにプッシュしました。その変更が見たいっすよね？？？そんな時にリモートからローカルへ引っ張ってくる！（プル）
        - ざっくり言えばダウンロード

    Pull Request
    プルリクエスト: フォーク元のリモートリポジトリに自分の変更内容を反映させたい場合に「相手にプルして欲しい！！！！」という熱いリクエストを送ること
        - これで相手はその送られてきたプルリクエストの内容を確認して、承認するかNGを出してコードレビューしろよバーカバーカって言ったりすることができる
        - これにより目的から外れた実装とかバグが発生しちゃうとかを事前に防げる！

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
                            ワークフロー
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

1 - 建部のアカウントのリポジトリ「DKDK」をフォークする
2 - フォークしたリポジトリを自分のPCでファイルとしてダウンロードするため、クローンする
3 - クローン出来たら指定されていたルートにそのプロジェクトのリポジトリが出来てるはずなので、そこで各自作業をする
4 - これを元である建部のリポジトリに反映させたい場合、プルリクエストを送る
5 - コメントも付け足して、どこを変えたのかなど詳細を記載する

